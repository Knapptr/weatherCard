{"version":3,"sources":["unitSwitch.jsx","colorCode.js","temperature.jsx","location.jsx","HiLo.jsx","app.js","index.js"],"names":["unitOptions","UnitSwitch","props","id","map","unit","className","currentUnit","key","onClick","func","colorCoder","temp","namedClass","i","classNameSelections","length","TemperatureDisplay","Math","round","weather","current","feelsLike","Location","place","HiLo","hi","lo","windSpeed","speedUnit","windDir","angle","undefined","App","state","units","placeName","location","lat","long","setColorCode","unitSelector","unitIn","setState","getWeather","initState","navigator","geolocation","getCurrentPosition","pos","message","coords","latitude","longitude","resolve","assignColor","tempClass","colorCode","input","inputType","searchLogic","apiCall","weatherApiSwitch","fetch","then","results","json","console","log","coord","lon","name","main","feels_like","temp_max","temp_min","wind","speed","deg","catch","e","handleChange","val","target","value","term","Number","parseInt","innerBit","this","placeholder","onChange","onKeyDown","keyCode","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c509a60.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nlet unitOptions = [\"f\", \"c\", \"k\"];\r\n\r\n\r\n\r\nexport let UnitSwitch = (props) => {\r\n    \r\n    return (\r\n        <div id=\"appHeader\">\r\n            <div id=\"unitSelector\">\r\n            \r\n            {unitOptions.map((unit) => {\r\n                return <div className={`unit ${unit===props.currentUnit?\"selected\":null}`} key={unit} id={`${unit}Selector`} onClick={()=>{props.func(unit)}}>{unit}</div>\r\n            })}\r\n            \r\n                \r\n            \r\n                {/* <input type=\"radio\" id=\"kSwitch\" name=\"unit\" onChange={() => { props.func('k') }}></input> */}\r\n            \r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}","import React from 'react';\r\n\r\n\r\n\r\n\r\n\r\nexport function colorCoder(temp) {\r\n    \r\n    let namedClass;\r\n    for (let i = 0; i < classNameSelections.length; i++){\r\n        if (temp > classNameSelections[i][0]) {\r\n            namedClass = classNameSelections[i][1]\r\n        }\r\n    }\r\n    \r\n    \r\n    \r\n    return namedClass;\r\n}\r\n\r\nlet classNameSelections = [[-999, \"frigid\"], [-17, \"freezing\"], [10, \"frigid\"], [32, \"cold\"], [40, \"brisk\"], [52, \"cool\"], [55, \"mid\"],\r\n[60, \"mild\"], [65, \"lukewarm\"], [70, \"warm\"], [75, \"hot\"], [90, \"sweltering\"], [100, \"roasted\"]];\r\n////colors\r\n//\r\n//\r\n/*\r\nCEF8FF //dead <-17\r\n98F0FF //freezing -17 - 10  \r\n3CE3FF// frigid 10-31\r\n58FEC5//cold 32-41\r\n11FFAD//brisk  40- 51\r\n3CFF9F//cool 52-55\r\n2DFE7C//mid 55-60\r\n27FF51//mild 60-65\r\n1BCF01//lukewarm 65-70\r\n7AFF00//warm 70-74\r\nE2E702//hot 75-80\r\nE7B502//very hot 81-90\r\nE77902//sweltering 90-100\r\nFF1300//roasted >100\r\n*/","import React from 'react';\r\n\r\nexport function TemperatureDisplay(props) {\r\n    return (\r\n        <div id=\"tempDisplay\">\r\n            \r\n            <div id=\"currentTemp\">\r\n                <div className=\"bigTemp\">\r\n                    {Math.round(props.weather.current)}째\r\n                </div>\r\n                <div className=\"smallTemp\">\r\n                    Feels like {Math.round(props.weather.feelsLike)}째\r\n                </div>\r\n            </div>\r\n           \r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport function Location(props) {\r\n    return (\r\n        <div className=\"location\">{props.place}</div>\r\n    )\r\n}","import React from 'react'\r\n\r\nfunction direction(angle) {\r\n    const directions = [\"North\", \"Northeast\", \"East\", \"Southeast\", \"South\", \"Southwest\", \"West\", \"Northwest\"];\r\n    return directions[Math.round(angle / 45) % 8];\r\n}\r\n\r\nexport function HiLo(props) {\r\n    return (\r\n        <div id=\"subInfo\">\r\n        <div id=\"hiLo\">\r\n            <div id=\"hi\">\r\n                Hi: {Math.round(props.weather.hi)}째\r\n            </div>\r\n            <div id=\"lo\">\r\n                Lo: {Math.round(props.weather.lo)}째\r\n            </div>\r\n            </div>\r\n            <div id=\"windInfo\">\r\n                <div id=\"windSpeed\">\r\n                    Wind: {props.weather.windSpeed} {props.speedUnit}\r\n                    \r\n                </div>\r\n                <div id=\"windDir\">\r\n                    {props.weather.windDir ? `From the ${direction(props.weather.windDir)}` : undefined}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { UnitSwitch } from './unitSwitch.jsx'\r\nimport { colorCoder } from './colorCode'\r\nimport { TemperatureDisplay } from './temperature';\r\nimport { WindDisplay } from './wind';\r\nimport { Location } from './location'\r\nimport { HiLo } from './HiLo';\r\n\r\n\r\n\r\nlet apiKey = \"d8ca43a4a9423ed8bf08fa2a87f4727a\"\r\n\r\nlet unitSelection = ['imperial','metric','kelvin']\r\n\r\nexport class App extends Component{\r\n    state = {\r\n        units: \"f\",\r\n        placeName: '-',\r\n        location: {\r\n            lat: 0,\r\n            long: 0\r\n        },\r\n        weather: {\r\n\r\n        }\r\n\r\n    }\r\n    setColorCode = () => {\r\n        \r\n        if (this.state.units === 'c') {\r\n            return (this.state.weather.feelsLike * (9 / 5) + 32);\r\n        } else if (this.state.units === 'k') {\r\n            return (this.state.weather.feelsLike * (9 / 5) - 459.67);\r\n        } else {\r\n            return this.state.weather.feelsLike;\r\n        }\r\n    }\r\n    unitSelector = (unitIn) => {\r\n        this.setState({ units:unitIn},this.getWeather)\r\n    }\r\n    initState = () => {\r\n        navigator.geolocation.getCurrentPosition((pos) => {\r\n            this.setState({\r\n                message: \"Thanks for granting location access!\",\r\n                location: {\r\n                    lat: pos.coords.latitude,\r\n                    long: pos.coords.longitude\r\n                }\r\n            }, this.getWeather);\r\n        },\r\n            (resolve) => {\r\n                this.setState({\r\n                    message: \"Accept location information access for accurate personal information\",\r\n                    location: {\r\n                        lat: 42.3250896,\r\n                        long: -72.6412013\r\n                    }\r\n                }\r\n                \r\n                    , this.getWeather);\r\n            }\r\n        )}   \r\n        searchLogic(term) {\r\n        \r\n\r\n            if (term) {\r\n                if (Number.parseInt(term) ? true : false) {\r\n                return \"zip\"\r\n                } else {return \"name\"}\r\n            } else {return 'coord'}\r\n        }\r\n    weatherApiSwitch(input) {\r\n        let unit = (this.state.units==='f'?\"imperial\":this.state.units===\"c\"?\"metric\":\"kelvin\")\r\n        let innerBit;\r\n        switch (input) {\r\n            case \"zip\":\r\n                innerBit = `zip=${this.state.input},us`\r\n                break;\r\n            case \"name\":\r\n                innerBit = `q=${this.state.input}`\r\n                break;\r\n            default:\r\n                innerBit = `lat=${this.state.location.lat}&lon=${this.state.location.long}`\r\n                break;\r\n        }\r\n        return `http://api.openweathermap.org/data/2.5/weather?units=${unit}&${innerBit}&APPID=${apiKey}`\r\n    }\r\n    assignColor = ()=>{\r\n        let tempClass = colorCoder(this.state.colorCode);\r\n        this.setState({ tempClass: tempClass });\r\n    }\r\n    getWeather = (input) => {\r\n        \r\n        let inputType = this.searchLogic(input);\r\n        let apiCall = this.weatherApiSwitch(inputType);\r\n        fetch(apiCall)\r\n            .then((results) => results.json())\r\n            .then((weather) => {\r\n                console.log(weather)\r\n                this.setState({\r\n                    location: {\r\n                        lat: weather.coord.lat,\r\n                        long: weather.coord.lon\r\n                    },\r\n                    placeName: weather.name,\r\n                    weather: {\r\n                        current: weather.main.temp,\r\n                        feelsLike: weather.main.feels_like,\r\n                        hi: weather.main.temp_max,\r\n                        lo: weather.main.temp_min,\r\n                        windSpeed: weather.wind.speed,\r\n                        windDir: weather.wind.deg\r\n\r\n                    }\r\n                })\r\n            }).then(() => {\r\n                let colorCode = this.setColorCode();\r\n                this.setState({ colorCode: colorCode }, this.assignColor)\r\n            })\r\n            .catch((e) => { console.log(e) })\r\n    }\r\n    \r\n    handleChange=(val)=> {\r\n        this.setState({ input: val.target.value })\r\n    }\r\n   \r\n    componentDidMount() {\r\n        this.initState()\r\n    \r\n    }\r\n    \r\n    render() {\r\n\r\n        if (this.state.placeName === \"-\") {\r\n            return (\r\n                <div id=\"appDisplay\">\r\n                    <h1>LOADING<span className=\"flashing\">...</span></h1>\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                \r\n                <div id=\"appDisplay\" className={this.state.tempClass}>\r\n                    \r\n                    <div id=\"topInfo\">\r\n                        <div id=\"leftInfo\">\r\n                        \r\n                        <Location place={this.state.placeName} />\r\n                            <HiLo weather={this.state.weather} speedUnit={this.state.units === 'f' ? 'MPH' : 'KPH'}/>\r\n                        </div>\r\n                        <div id=\"rightInfo\">\r\n                        <TemperatureDisplay weather={this.state.weather}/>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                   <div id=\"bottomInfo\">\r\n                        <div>\r\n                            <input placeholder=\"Enter city or Zip\" onChange={this.handleChange} onKeyDown={(e) => { if (e.keyCode === 13) { this.getWeather(this.state.input) } }}></input>\r\n                            <button onClick={()=>{this.getWeather(this.state.input)}}>Search</button>\r\n                        </div>\r\n                        <UnitSwitch currentUnit={this.state.units} func={this.unitSelector} />\r\n                        </div>\r\n                </div>\r\n            )\r\n        }\r\n    }   \r\n}\r\n\r\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom'\nimport { App } from './app'\n\n\n\n\n\n\n\n\n ReactDOM.render(<App/>,document.getElementById('display'))   \n\n\n \n"],"sourceRoot":""}